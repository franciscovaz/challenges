{"ast":null,"code":"var _jsxFileName = \"/Users/franciscovaz/Documents/Projetos/GoStack-Bootcamp/github-react/src/pages/Repository/index.js\";\nimport React, { Component } from 'react';\nimport api from '../../services/api'; // import { Container } from './styles';\n\nexport default class Repository extends Component {\n  async componentDidMount() {\n    const {\n      match\n    } = this.props;\n    const repoName = decodeURIComponent(match.params.repository);\n    const [repository, issue] = await Promise.all([api.get(`/repos/${repoName}`), api.get(`/repos/${repoName}/issues`, {\n      params: {\n        state: 'open',\n        per_page: 5\n      }\n    })]);\n    console.log(repository);\n    console.log(issue);\n  }\n\n  render() {\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Repository\");\n  }\n\n}","map":{"version":3,"sources":["/Users/franciscovaz/Documents/Projetos/GoStack-Bootcamp/github-react/src/pages/Repository/index.js"],"names":["React","Component","api","Repository","componentDidMount","match","props","repoName","decodeURIComponent","params","repository","issue","Promise","all","get","state","per_page","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,oBAAhB,C,CACA;;AAEA,eAAe,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAChD,QAAMG,iBAAN,GAA0B;AACxB,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AAEA,UAAMC,QAAQ,GAAGC,kBAAkB,CAACH,KAAK,CAACI,MAAN,CAAaC,UAAd,CAAnC;AAEA,UAAM,CAACA,UAAD,EAAaC,KAAb,IAAsB,MAAMC,OAAO,CAACC,GAAR,CAAY,CAC5CX,GAAG,CAACY,GAAJ,CAAS,UAASP,QAAS,EAA3B,CAD4C,EAE5CL,GAAG,CAACY,GAAJ,CAAS,UAASP,QAAS,SAA3B,EAAqC;AACnCE,MAAAA,MAAM,EAAE;AACNM,QAAAA,KAAK,EAAE,MADD;AAENC,QAAAA,QAAQ,EAAE;AAFJ;AAD2B,KAArC,CAF4C,CAAZ,CAAlC;AAUAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,UAAZ;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AAtB+C","sourcesContent":["import React, { Component } from 'react';\nimport api from '../../services/api';\n// import { Container } from './styles';\n\nexport default class Repository extends Component {\n  async componentDidMount() {\n    const { match } = this.props;\n\n    const repoName = decodeURIComponent(match.params.repository);\n\n    const [repository, issue] = await Promise.all([\n      api.get(`/repos/${repoName}`),\n      api.get(`/repos/${repoName}/issues`, {\n        params: {\n          state: 'open',\n          per_page: 5,\n        },\n      }),\n    ]);\n\n    console.log(repository);\n    console.log(issue);\n  }\n\n  render() {\n    return <h1>Repository</h1>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}