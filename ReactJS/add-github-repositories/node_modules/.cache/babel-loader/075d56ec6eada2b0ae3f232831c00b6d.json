{"ast":null,"code":"var _jsxFileName = \"/Users/franciscovaz/Documents/Projetos/GoStack-Bootcamp/github-react/src/pages/Main/index.js\";\nimport React, { Component } from 'react';\nimport { FaGithubAlt, FaPlus, FaSpinner } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport api from '../../services/api';\nimport Container from '../../components/Container';\nimport { Form, SubmitButton, List } from './styles';\nexport default class Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newRepo: '',\n      repositories: [],\n      loading: false,\n      hasError: false\n    };\n\n    this.handleInputChange = e => {\n      this.setState({\n        newRepo: e.target.value\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const {\n        newRepo,\n        repositories\n      } = this.state;\n      const response = await api.get(`/repos/${newRepo}`);\n      const data = {\n        name: response.data.full_name\n      };\n      this.setState({\n        repositories: [...repositories, data],\n        newRepo: '',\n        loading: false\n      });\n    };\n  }\n\n  // Carregar os dados do localStorage\n  componentDidMount() {\n    const repositories = localStorage.getItem('repositories');\n\n    if (repositories) {\n      this.setState({\n        repositories: JSON.parse(repositories)\n      });\n    }\n  } // Salvar os dados do localStorage\n\n\n  componentDidUpdate(_, prevState) {\n    const {\n      repositories\n    } = this.state;\n\n    if (prevState.repositories !== repositories) {\n      localStorage.setItem('repositories', JSON.stringify(repositories));\n    }\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      hasError: true\n    });\n\n    if (hasError) {\n      console.log('Tive erro');\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"TENHO ERRO!!!!\");\n    }\n  }\n\n  render() {\n    const {\n      newRepo,\n      repositories,\n      loading\n    } = this.state;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(FaGithubAlt, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), \"Reposit\\xF3rios\"), React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Adicionar reposit\\xF3rio\",\n      value: newRepo,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(SubmitButton, {\n      loading: loading ? 1 : 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, loading ? React.createElement(FaSpinner, {\n      color: \"#FFF\",\n      size: 14,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }) : React.createElement(FaPlus, {\n      color: \"#FFF\",\n      size: 14,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }))), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, repositories.map(repository => React.createElement(\"li\", {\n      key: repository.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, repository.name), React.createElement(Link, {\n      to: `/repository/${encodeURIComponent(repository.name)}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Detalhes\")))));\n  }\n\n}","map":{"version":3,"sources":["/Users/franciscovaz/Documents/Projetos/GoStack-Bootcamp/github-react/src/pages/Main/index.js"],"names":["React","Component","FaGithubAlt","FaPlus","FaSpinner","Link","api","Container","Form","SubmitButton","List","Main","state","newRepo","repositories","loading","hasError","handleInputChange","e","setState","target","value","handleSubmit","preventDefault","response","get","data","name","full_name","componentDidMount","localStorage","getItem","JSON","parse","componentDidUpdate","_","prevState","setItem","stringify","componentDidCatch","error","info","console","log","render","map","repository","encodeURIComponent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { FaGithubAlt, FaPlus, FaSpinner } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\n\nimport api from '../../services/api';\n\nimport Container from '../../components/Container';\nimport { Form, SubmitButton, List } from './styles';\n\nexport default class Main extends Component {\n  // eslint-disable-next-line react/state-in-constructor\n  state = {\n    newRepo: '',\n    repositories: [],\n    loading: false,\n    hasError: false,\n  };\n\n  // Carregar os dados do localStorage\n  componentDidMount() {\n    const repositories = localStorage.getItem('repositories');\n\n    if (repositories) {\n      this.setState({ repositories: JSON.parse(repositories) });\n    }\n  }\n\n  // Salvar os dados do localStorage\n  componentDidUpdate(_, prevState) {\n    const { repositories } = this.state;\n\n    if (prevState.repositories !== repositories) {\n      localStorage.setItem('repositories', JSON.stringify(repositories));\n    }\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true });\n    if (hasError) {\n      console.log('Tive erro');\n      return <h1>TENHO ERRO!!!!</h1>;\n    }\n  }\n\n  handleInputChange = e => {\n    this.setState({ newRepo: e.target.value });\n  };\n\n  handleSubmit = async e => {\n    e.preventDefault();\n\n    this.setState({ loading: true });\n    const { newRepo, repositories } = this.state;\n\n    const response = await api.get(`/repos/${newRepo}`);\n\n    const data = {\n      name: response.data.full_name,\n    };\n\n    this.setState({\n      repositories: [...repositories, data],\n      newRepo: '',\n      loading: false,\n    });\n  };\n\n  render() {\n    const { newRepo, repositories, loading } = this.state;\n    return (\n      <Container>\n        <h1>\n          <FaGithubAlt />\n          Reposit√≥rios\n        </h1>\n\n        <Form onSubmit={this.handleSubmit}>\n          <input\n            type=\"text\"\n            placeholder=\"Adicionar reposit√≥rio\"\n            value={newRepo}\n            onChange={this.handleInputChange}\n          />\n          <SubmitButton loading={loading ? 1 : 0}>\n            {loading ? (\n              <FaSpinner color=\"#FFF\" size={14} />\n            ) : (\n              <FaPlus color=\"#FFF\" size={14} />\n            )}\n          </SubmitButton>\n        </Form>\n\n        <List>\n          {repositories.map(repository => (\n            <li key={repository.name}>\n              <span>{repository.name}</span>\n              <Link to={`/repository/${encodeURIComponent(repository.name)}`}>\n                Detalhes\n              </Link>\n            </li>\n          ))}\n        </List>\n      </Container>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}